/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.Arrays;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danielh
 */
public class MainWindow extends javax.swing.JFrame {

	/**
	 * Creates new form MainWindow
	 */
	
	public Generala generala = new Generala();
	
	public MainWindow()
	{
		initComponents();
		this.setLocationRelativeTo(this);
		this.setMinimumSize(this.getPreferredSize());
		
		generala.jugadores = PlayersWindow.getPlayers();
		
		generala.tablaPuntajes = new int[generala.jugadores.length][12];
		
		System.out.println("players = "+Arrays.toString(generala.jugadores));
		
		DefaultTableModel defaultTableModel = new DefaultTableModel();
		
		tablaPuntajes.setModel(defaultTableModel);
		
		for (int i = 0; i < generala.jugadores.length; i++)
		{
			generala.tablaPuntajes[i][0] = i;
			
			defaultTableModel.addColumn(generala.jugadores[i]);
		}
	}
	/**
	 * This method is called from within the constructor to initialize the form. WARNING:
	 * Do NOT modify this code. The content of this method is always regenerated by the
	 * Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        dicePanel = new javax.swing.JPanel();
        dice1 = new javax.swing.JLabel();
        dice2 = new javax.swing.JLabel();
        dice3 = new javax.swing.JLabel();
        dice4 = new javax.swing.JLabel();
        dice5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tirar = new javax.swing.JLabel();
        holder1 = new javax.swing.JLabel();
        holder2 = new javax.swing.JLabel();
        holder3 = new javax.swing.JLabel();
        holder4 = new javax.swing.JLabel();
        holder5 = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        panelPuntajes = new javax.swing.JScrollPane();
        tablaPuntajes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));

        leftPanel.setBackground(new java.awt.Color(0, 255, 153));

        dicePanel.setBackground(new java.awt.Color(0, 255, 153));
        dicePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dice1.setBackground(new java.awt.Color(255, 255, 255));
        dice1.setForeground(new java.awt.Color(255, 255, 255));
        dice1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice1.setMaximumSize(new java.awt.Dimension(50, 50));
        dice1.setMinimumSize(new java.awt.Dimension(50, 50));
        dice1.setPreferredSize(new java.awt.Dimension(50, 50));
        dice1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice1MouseClicked(evt);
            }
        });
        dicePanel.add(dice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        dice2.setBackground(new java.awt.Color(255, 255, 255));
        dice2.setForeground(new java.awt.Color(255, 255, 255));
        dice2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice2.setMaximumSize(new java.awt.Dimension(50, 50));
        dice2.setMinimumSize(new java.awt.Dimension(50, 50));
        dice2.setPreferredSize(new java.awt.Dimension(50, 50));
        dice2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice2MouseClicked(evt);
            }
        });
        dicePanel.add(dice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, -1, -1));

        dice3.setBackground(new java.awt.Color(255, 255, 255));
        dice3.setForeground(new java.awt.Color(255, 255, 255));
        dice3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice3.setMaximumSize(new java.awt.Dimension(50, 50));
        dice3.setMinimumSize(new java.awt.Dimension(50, 50));
        dice3.setPreferredSize(new java.awt.Dimension(50, 50));
        dice3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice3MouseClicked(evt);
            }
        });
        dicePanel.add(dice3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        dice4.setBackground(new java.awt.Color(255, 255, 255));
        dice4.setForeground(new java.awt.Color(255, 255, 255));
        dice4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice4.setMaximumSize(new java.awt.Dimension(50, 50));
        dice4.setMinimumSize(new java.awt.Dimension(50, 50));
        dice4.setPreferredSize(new java.awt.Dimension(50, 50));
        dice4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice4MouseClicked(evt);
            }
        });
        dicePanel.add(dice4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        dice5.setBackground(new java.awt.Color(255, 255, 255));
        dice5.setForeground(new java.awt.Color(255, 255, 255));
        dice5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dice5.setMaximumSize(new java.awt.Dimension(50, 50));
        dice5.setMinimumSize(new java.awt.Dimension(50, 50));
        dice5.setPreferredSize(new java.awt.Dimension(50, 50));
        dice5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dice5MouseClicked(evt);
            }
        });
        dicePanel.add(dice5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 255, 153));

        tirar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tirar.setText("Tirar dados");
        tirar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tirarMouseClicked(evt);
            }
        });

        holder1.setBackground(new java.awt.Color(255, 255, 255));
        holder1.setForeground(new java.awt.Color(255, 255, 255));
        holder1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holder1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png"))); // NOI18N
        holder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                holder1MouseClicked(evt);
            }
        });

        holder2.setBackground(new java.awt.Color(255, 255, 255));
        holder2.setForeground(new java.awt.Color(255, 255, 255));
        holder2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holder2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png"))); // NOI18N
        holder2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                holder2MouseClicked(evt);
            }
        });

        holder3.setBackground(new java.awt.Color(255, 255, 255));
        holder3.setForeground(new java.awt.Color(255, 255, 255));
        holder3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holder3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png"))); // NOI18N
        holder3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                holder3MouseClicked(evt);
            }
        });

        holder4.setBackground(new java.awt.Color(255, 255, 255));
        holder4.setForeground(new java.awt.Color(255, 255, 255));
        holder4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holder4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png"))); // NOI18N
        holder4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                holder4MouseClicked(evt);
            }
        });

        holder5.setBackground(new java.awt.Color(255, 255, 255));
        holder5.setForeground(new java.awt.Color(255, 255, 255));
        holder5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holder5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png"))); // NOI18N
        holder5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                holder5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(holder1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(holder2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(holder3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(holder4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tirar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(holder5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(tirar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holder1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holder2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holder3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holder4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holder5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        rightPanel.setBackground(new java.awt.Color(255, 255, 255));

        panelPuntajes.setBackground(new java.awt.Color(255, 255, 255));

        tablaPuntajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaPuntajes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelPuntajes.setViewportView(tablaPuntajes);

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addComponent(panelPuntajes, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPuntajes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
	
	
		
    private void dice1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice1MouseClicked
		holdDice(dice1);
    }//GEN-LAST:event_dice1MouseClicked

    private void dice2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice2MouseClicked
		holdDice(dice2);
    }//GEN-LAST:event_dice2MouseClicked

    private void dice3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice3MouseClicked
		holdDice(dice3);
    }//GEN-LAST:event_dice3MouseClicked

    private void dice4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice4MouseClicked
		holdDice(dice4);
    }//GEN-LAST:event_dice4MouseClicked

    private void dice5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dice5MouseClicked
		holdDice(dice5);
    }//GEN-LAST:event_dice5MouseClicked

    private void holder5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holder5MouseClicked
		returnDice(holder5);
        setHolderIcon(holder5);
    }//GEN-LAST:event_holder5MouseClicked

    private void holder4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holder4MouseClicked
		returnDice(holder4);
        setHolderIcon(holder4);
    }//GEN-LAST:event_holder4MouseClicked

    private void holder3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holder3MouseClicked
		returnDice(holder3);
        setHolderIcon(holder3);
    }//GEN-LAST:event_holder3MouseClicked

    private void holder2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holder2MouseClicked
		returnDice(holder2);
        setHolderIcon(holder2);
    }//GEN-LAST:event_holder2MouseClicked

    private void holder1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_holder1MouseClicked
		returnDice(holder1);
        setHolderIcon(holder1);
    }//GEN-LAST:event_holder1MouseClicked

    private void tirarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tirarMouseClicked

        JLabel[] holder = {holder1,holder2,holder3,holder4,holder5};

        int takenHolders = 0;

        for (int i = 0; i < 5; i++)
        {
            if (isHolding(holder[i]))
            {
                takenHolders++;
            }
        }
		
        generala.dados = generala.lanzar(5 - takenHolders);
        
		int[] originalDice = generala.dados;
        
		setDiceIcons();
		
		orderDiceIcons();
		
		getDiceValues();
    }//GEN-LAST:event_tirarMouseClicked
	
	private void setHolderIcon(JLabel holder)
	{
		holder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/diceHolder.png")));
	}
	
	private void setDiceIcons()
	{
		int[] dados = generala.dados;
		
		Arrays.sort(dados);
		
		JLabel[] dice = {dice1,dice2,dice4,dice3,dice5};
		
		for (int i = 0; i < dados.length; i++)
		{
			dice[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/d"+dados[i]+".png")));
		}
	}
	
	private void orderDiceIcons()
	{
		JLabel[] dice = {dice1,dice2,dice3,dice4,dice5};
		
		boolean changed = true;
		
		while (changed)
		{
			changed = false;
			for (int i = 0; i < 4; i++)
			{
				for (int j = i + 1; j < 5; j++)
				{
					if (!hasIcon(dice[i]) && hasIcon(dice[j]))
					{
						dice[i].setIcon(dice[j].getIcon());
						dice[j].setIcon(null);
						changed = true;
					}	
				}
			}
		}
		
	}
	
	private boolean hasIcon(JLabel label)
	{
		boolean hasIcon;
		
		if (label.getIcon() == null)
		{
			return false;
		}
		else
		{
			return true;
		}
	}
	
	private boolean isHolding(JLabel holder)
	{
		if (holder.getIcon().toString().equals("file:/home/danielh/Documentos/Programs/java/netbeans/Grala/build/classes/Pictures/diceHolder.png"))
		{
			return false;
		}
		else
		{
			return true;
		}
	}
	
	private void holdDice(JLabel l1)
	{
		if (hasIcon(l1))
		{
			JLabel[] holder = {holder1,holder2,holder3,holder4,holder5};

			for (int i = 0; i < 5; i++)
			{
				if (!isHolding(holder[i]))
				{
					holder[i].setIcon(l1.getIcon());
					l1.setIcon(null);
					break;
				}	
			}	
		}
	}
	
	private void returnDice(JLabel holder)
	{
		JLabel[] dice = {dice1,dice2,dice4,dice3,dice5};
		
		if (isHolding(holder))
		{
			for (int i = 0; i < 5; i++)
			{
				if (!hasIcon(dice[i]))
				{
					dice[i].setIcon(holder.getIcon());
					setHolderIcon(holder);
					break;
				}
			}
		}
	}

	private void getDiceValues()
	{
		int[] dados = generala.dados;
		
		Arrays.sort(dados);
		
		JLabel[] dice = {dice1,dice2,dice4,dice3,dice5};
		
		dice1.getIcon().toString();
		
		for (int i = 0; i < 5; i++)
		{
			switch (dice[i].getIcon().toString().charAt(i))
			{
				case 1:
					dados[i] = 1;
					break;
				case 2:
					dados[i] = 2;
					break;
				case 3:
					dados[i] = 3;
					break;
				case 4:
					dados[i] = 4;
					break;
				case 5:
					dados[i] = 5;
					break;
				case 6:
					dados[i] = 6;
					break;
				default:
					throw new AssertionError();
			}
		}
	}	

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainWindow().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JLabel dice1;
    private javax.swing.JLabel dice2;
    private javax.swing.JLabel dice3;
    private javax.swing.JLabel dice4;
    private javax.swing.JLabel dice5;
    private javax.swing.JPanel dicePanel;
    private javax.swing.JLabel holder1;
    private javax.swing.JLabel holder2;
    private javax.swing.JLabel holder3;
    private javax.swing.JLabel holder4;
    private javax.swing.JLabel holder5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JScrollPane panelPuntajes;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTable tablaPuntajes;
    private javax.swing.JLabel tirar;
    // End of variables declaration//GEN-END:variables

}
